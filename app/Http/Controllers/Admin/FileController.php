<?php

namespace App\Http\Controllers\Admin;

use App\Models\File;
use App\Models\Category;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

/**
 * üìÅ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏ –≤ –∞–¥–º–∏–Ω–∫–µ
 *
 * üîπ –ó–∞–≥—Ä—É–∑–∫–∞, –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
 * üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (type = 'file')
 */
class FileController extends Controller
{
    /**
     * ‚¨ÜÔ∏è –ú–µ—Ç–æ–¥ upload()
     *
     * üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
     *
     * üîê –í–∞–ª–∏–¥–∞—Ü–∏—è:
     * - —Ñ–∞–π–ª –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–æ–≥–æ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤
     * - category_id –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ categories
     *
     * üóÇÔ∏è –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ `storage/app/public/files`
     * üìå –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –≤ –ë–î
     */
    public function upload(Request $request)
    {
        $request->validate([
            'file' => 'required',
            'category_id' => 'required|exists:categories,id',
        ]);

        $file = $request->file('file');

        // üß© –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
        $filename = Str::random(16) . '.' . $file->getClientOriginalExtension();

        // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É `files` (–¥–∏—Å–∫ public)
        $path = $file->storeAs('files', $filename, 'public');

        // üßæ –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ files
        File::create([
            'name' => $file->getClientOriginalName(),
            'path' => $path,
            'mime' => $file->getMimeType(),
            'size' => $file->getSize(),
            'category_id' => $request->category_id,
        ]);

        return back()->with('success', '‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    }

    /**
     * üìã –ú–µ—Ç–æ–¥ index()
     *
     * üìë –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
     *
     * üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —Ç–∏–ø–æ–º 'file'
     * üîç –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ `category_id` —á–µ—Ä–µ–∑ query string
     * üìÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è: –ø–æ 10 —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    public function index(Request $request)
    {
        $currentCategory = $request->input('category');

        // üìÇ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–∏–ø–∞ 'file'
        $categories = Category::where('type', 'file')->get();

        // üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        $files = File::when($currentCategory, function ($query) use ($currentCategory) {
            return $query->where('category_id', $currentCategory);
        })->paginate(10)->withQueryString(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü

        return view('admin.files.index', compact('files', 'categories', 'currentCategory'));
    }

    /**
     * ‚¨áÔ∏è –ú–µ—Ç–æ–¥ download()
     *
     * üóÉÔ∏è –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ ID
     *
     * üîê –ò—â–µ–º —Ñ–∞–π–ª –≤ –±–∞–∑–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ Storage
     */
    public function download($id)
    {
        $file = File::findOrFail($id);

        // üì§ –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º
        return Storage::disk('public')->download($file->path, $file->name);
    }

    /**
     * üß© –ú–µ—Ç–æ–¥ filter()
     *
     * (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ)
     *
     * üìë –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã, –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    public function filter(Request $request)
    {
        $categoryId = $request->get('category');

        // üìÇ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        $categories = Category::where('type', 'file')->get();

        // üìÅ –§–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        $files = File::where('category_id', $categoryId)->get();

        return view('files.index', compact('files', 'categories'));
    }

    /**
     * üóëÔ∏è –ú–µ—Ç–æ–¥ bulkDelete()
     *
     * üö´ –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
     *
     * üîπ –£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª —Å –¥–∏—Å–∫–∞
     * üîπ –£–¥–∞–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –∏–∑ –±–∞–∑—ã
     */
    public function bulkDelete(Request $request)
    {
        // üìå –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ ID –∏–∑ —Å—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
        $ids = explode(',', $request->input('file_ids'));

        if (!empty($ids)) {
            $files = File::whereIn('id', $ids)->get();

            foreach ($files as $file) {
                // üßº –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å –¥–∏—Å–∫–∞
                Storage::disk('public')->delete($file->path);

                // üßπ –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã
                $file->delete();
            }

            return back()->with('success', 'üóëÔ∏è –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã.');
        }

        return back()->with('error', '‚ö†Ô∏è –ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.');
    }
}
