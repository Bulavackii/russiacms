<?php

return [

    /*
    |--------------------------------------------------------------------------
    | 🔐 Аутентификация по умолчанию
    |--------------------------------------------------------------------------
    |
    | Здесь задаются значения "guard" и "broker" по умолчанию.
    | Guard — механизм хранения состояния (например, сессия).
    | Broker — обработка сброса пароля.
    |
    */

    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),        // 🧱 Guard по умолчанию
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'), // 🔁 Broker сброса пароля
    ],

    /*
    |--------------------------------------------------------------------------
    | 🛡️ Guard'ы аутентификации
    |--------------------------------------------------------------------------
    |
    | Guard отвечает за механизм аутентификации (сессия, токены и т.д.).
    | Здесь можно добавить разные guard'ы: admin, api, client и т.п.
    |
    | Поддерживаемые драйверы: "session", "token", "sanctum", "passport"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],

        'api' => [
            'driver' => 'jwt',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 👥 Провайдеры пользователей
    |--------------------------------------------------------------------------
    |
    | Провайдер — это способ загрузки пользователя (из БД, LDAP и т.п.).
    | В большинстве случаев используется Eloquent-модель User.
    |
    | Поддерживаемые драйверы: "eloquent", "database"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',                          // 📘 Используем Eloquent ORM
            'model' => env('AUTH_MODEL', App\Models\User::class), // 👤 Модель пользователя
        ],

        // Пример альтернативного провайдера через прямой доступ к БД:
        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 🔁 Сброс пароля
    |--------------------------------------------------------------------------
    |
    | Здесь настраивается поведение системы сброса пароля:
    | - таблица токенов
    | - срок действия токена (в минутах)
    | - задержка между повторными запросами
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users', // Использует провайдер "users"
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'), // Таблица токенов
            'expire' => 60,        // 🕓 Токен действителен 60 минут
            'throttle' => 60,      // ⏳ Задержка между запросами (в секундах)
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | ⏱️ Таймаут подтверждения пароля
    |--------------------------------------------------------------------------
    |
    | Через сколько секунд нужно снова ввести пароль при защите важных операций
    | (например, смена email, удаление аккаунта и т.п.).
    | По умолчанию — 10800 секунд (3 часа).
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];
