<?php

return [

    /*
    |--------------------------------------------------------------------------
    | 📦 Диск файловой системы по умолчанию
    |--------------------------------------------------------------------------
    |
    | Этот диск будет использоваться Laravel по умолчанию при работе с файлами,
    | если ты явно не укажешь другой диск. Обычно это "local" или "public".
    |
    */
    'default' => env('FILESYSTEM_DISK', 'local'),

    /*
    |--------------------------------------------------------------------------
    | 💽 Диски файловой системы
    |--------------------------------------------------------------------------
    |
    | Здесь ты можешь определить любое количество дисков. Каждый диск —
    | это отдельное хранилище с собственными настройками.
    |
    | Поддерживаемые драйверы:
    | - "local" — локальное хранилище (сервер)
    | - "ftp", "sftp" — удалённое хранилище
    | - "s3" — облачное хранилище Amazon S3 (или совместимые)
    |
    */
    'disks' => [

        // 📂 Приватное локальное хранилище (не доступно из браузера напрямую)
        'local' => [
            'driver' => 'local',
            'root' => storage_path('app/private'), // путь к каталогу
            'serve' => true,   // Laravel может "обслуживать" эти файлы
            'throw' => false,  // отключаем выброс исключений
            'report' => false, // отключаем отчёты об ошибках
        ],

        // 🌐 Публичное хранилище (доступ через браузер, например, для изображений)
        'public' => [
            'driver' => 'local',
            'root' => storage_path('app/public'),       // путь к публичным файлам
            'url' => env('APP_URL') . '/storage',       // публичный URL
            'visibility' => 'public',                   // делает файлы доступными
            'throw' => false,
            'report' => false,
        ],

        // ☁️ Облачное хранилище Amazon S3 (или совместимые сервисы типа DigitalOcean Spaces)
        's3' => [
            'driver' => 's3',
            'key' => env('AWS_ACCESS_KEY_ID'),                 // API-ключ
            'secret' => env('AWS_SECRET_ACCESS_KEY'),          // Секретный ключ
            'region' => env('AWS_DEFAULT_REGION'),             // Регион (например: eu-central-1)
            'bucket' => env('AWS_BUCKET'),                     // Название бакета
            'url' => env('AWS_URL'),                           // URL к бакету
            'endpoint' => env('AWS_ENDPOINT'),                 // Кастомный endpoint (если не AWS)
            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
            'report' => false,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | 🔗 Символические ссылки
    |--------------------------------------------------------------------------
    |
    | Эти ссылки будут созданы при выполнении команды:
    | php artisan storage:link
    |
    | Они связывают папку "public/storage" с "storage/app/public"
    | и позволяют отдавать загруженные файлы через HTTP.
    |
    */
    'links' => [
        public_path('storage') => storage_path('app/public'),
    ],

];
