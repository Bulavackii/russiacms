<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | 🔐 Драйвер сессий по умолчанию
    |--------------------------------------------------------------------------
    |
    | Определяет, где Laravel будет хранить данные сессий.
    | Можно выбрать: "file", "cookie", "database", "apc", "memcached", "redis", "dynamodb", "array"
    | Рекомендуется "database" или "redis" для продакшена.
    |
    */
    'driver' => env('SESSION_DRIVER', 'file'),

    /*
    |--------------------------------------------------------------------------
    | ⏳ Время жизни сессии (минуты)
    |--------------------------------------------------------------------------
    |
    | Сколько минут сессия может быть неактивной, прежде чем истечёт срок её действия.
    | Если нужно — можно сразу уничтожать при закрытии браузера.
    |
    */
    'lifetime' => (int) env('SESSION_LIFETIME', 120),

    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),

    /*
    |--------------------------------------------------------------------------
    | 🔒 Шифрование сессий
    |--------------------------------------------------------------------------
    |
    | Если включено, все данные сессии будут шифроваться в хранилище.
    | Рекомендуется для повышения безопасности.
    |
    */
    'encrypt' => env('SESSION_ENCRYPT', false),

    /*
    |--------------------------------------------------------------------------
    | 📂 Место хранения файлов сессий (для драйвера file)
    |--------------------------------------------------------------------------
    |
    | Путь к папке, где будут храниться файлы сессий.
    |
    */
    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | 🗄️ Подключение к БД для драйверов database или redis
    |--------------------------------------------------------------------------
    |
    | Указываем, какое подключение к базе данных использовать для хранения сессий.
    |
    */
    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | 🗃️ Таблица для хранения сессий (при использовании драйвера database)
    |--------------------------------------------------------------------------
    */
    'table' => env('SESSION_TABLE', 'sessions'),

    /*
    |--------------------------------------------------------------------------
    | 🧰 Кэш-стор для драйверов на основе кэша (redis, memcached, apc)
    |--------------------------------------------------------------------------
    */
    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | 🎲 Вероятность очистки старых сессий (лотерея)
    |--------------------------------------------------------------------------
    |
    | Например, 2 из 100 — при каждом запросе 2% вероятность запуска очистки.
    | Используется для удаления устаревших сессий.
    |
    */
    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | 🍪 Имя cookie сессии
    |--------------------------------------------------------------------------
    |
    | Название cookie, в котором хранится идентификатор сессии.
    | Обычно не нужно менять.
    |
    */
    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | 🛣️ Путь cookie
    |--------------------------------------------------------------------------
    |
    | Определяет, к каким путям будет доступна cookie.
    | Обычно это корень сайта "/".
    |
    */
    'path' => env('SESSION_PATH', '/'),

    /*
    |--------------------------------------------------------------------------
    | 🌐 Домен cookie
    |--------------------------------------------------------------------------
    |
    | На каких доменах cookie будет действовать (например, ".example.com").
    |
    */
    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | 🔒 HTTPS только (Secure cookie)
    |--------------------------------------------------------------------------
    |
    | Если true — cookie будет отправляться только по HTTPS.
    | Рекомендуется включать на продакшене.
    |
    */
    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | 🚫 HTTPOnly cookie
    |--------------------------------------------------------------------------
    |
    | Если true — cookie будет недоступна из JavaScript (повышает безопасность).
    | Обычно оставляют true.
    |
    */
    'http_only' => env('SESSION_HTTP_ONLY', true),

    /*
    |--------------------------------------------------------------------------
    | 🔄 Same-Site cookie
    |--------------------------------------------------------------------------
    |
    | Контролирует поведение cookie при межсайтовых запросах, помогает защититься от CSRF.
    | Поддерживаемые значения: "lax" (по умолчанию), "strict", "none", null.
    |
    */
    'same_site' => env('SESSION_SAME_SITE', 'lax'),

    /*
    |--------------------------------------------------------------------------
    | 🍪 Partitioned cookies
    |--------------------------------------------------------------------------
    |
    | Включает привязку cookie к топ-уровневому сайту в кросс-сайтовом контексте.
    | Требует включения secure и same_site = none.
    |
    */
    'partitioned' => env('SESSION_PARTITIONED_COOKIE', false),

];
