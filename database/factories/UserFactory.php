<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

/**
 * üß™ –§–∞–±—Ä–∏–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (User)
 *
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–æ–±–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ñ–µ–π–∫–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å–∏–¥–µ—Ä–æ–≤ –∏ —Ç–µ—Å—Ç–æ–≤.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É Faker (—á–µ—Ä–µ–∑ `fake()`).
 *
 * @extends Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * üîê –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å Hash::make() –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ
     *
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—â–∏–π –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π "password", —Ö–µ—à–∏—Ä—É–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑.
     */
    protected static ?string $password;

    /**
     * ‚öôÔ∏è –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–µ–ª–∏ User
     *
     * –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ø–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
     * –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
     *
     * @return array<string, mixed> ‚Äî –ù–∞–±–æ—Ä –∞—Ç—Ä–∏–±—É—Ç–æ–≤ –¥–ª—è –º–æ–¥–µ–ª–∏
     */
    public function definition(): array
    {
        return [
            // üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî —Å–ª—É—á–∞–π–Ω–æ–µ
            'name' => fake()->name(),

            // üìß Email ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π
            'email' => fake()->unique()->safeEmail(),

            // ‚úÖ Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω (–¥–∞—Ç–∞/–≤—Ä–µ–º—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏)
            'email_verified_at' => now(),

            // üîê –ü–∞—Ä–æ–ª—å ‚Äî —Ö–µ—à –æ—Ç —Å–ª–æ–≤–∞ "password", –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –¥–ª—è –≤—Å–µ—Ö
            // –ö—ç—à–∏—Ä—É–µ—Ç—Å—è –≤ static::$password, —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å Hash::make –∫–∞–∂–¥—ã–π —Ä–∞–∑
            'password' => static::$password ??= Hash::make('password'),

            // üß† –¢–æ–∫–µ–Ω –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ "–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è"
            'remember_token' => Str::random(10),
        ];
    }

    /**
     * üö´ –°–æ—Å—Ç–æ—è–Ω–∏–µ: email –ù–ï –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω
     *
     * –ü–æ–∑–≤–æ–ª—è–µ—Ç —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω email.
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ—Å—Ç–∞—Ö, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
     * –¥–ª—è –Ω–µ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
     *
     * –ü—Ä–∏–º–µ—Ä:
     * User::factory()->unverified()->create();
     *
     * @return static
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}
