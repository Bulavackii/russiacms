<?php

namespace Modules\Categories\Controllers\Admin;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Modules\Categories\Models\Category;

/**
 * üì¶ –ê–¥–º–∏–Ω-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
 */
class CategoryController extends Controller
{
    /**
     * üìÑ –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ–∏—Å–∫–∞
     */
    public function index(Request $request)
    {
        $query = Category::query();

        // üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if ($request->filled('search')) {
            $query->where('title', 'like', '%' . $request->search . '%');
        }

        // üìã –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é ID
        $categories = $query->orderByDesc('id')->paginate(10);

        return view('Categories::admin.index', compact('categories'));
    }

    /**
     * ‚ûï –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    public function create()
    {
        return view('Categories::admin.create');
    }

    /**
     * üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    public function store(Request $request)
    {
        // ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        $request->validate([
            'title' => 'required|string|max:255',
        ]);

        // üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        Category::create([
            'title' => $request->title
        ]);

        return redirect()
            ->route('admin.categories.index')
            ->with('success', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞.');
    }

    /**
     * ‚úèÔ∏è –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    public function edit($id)
    {
        $category = Category::findOrFail($id);
        return view('Categories::admin.edit', compact('category'));
    }

    /**
     * ‚ôªÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    public function update(Request $request, $id)
    {
        $request->validate([
            'title' => 'required|string|max:255',
        ]);

        $category = Category::findOrFail($id);
        $category->update([
            'title' => $request->title
        ]);

        return redirect()
            ->route('admin.categories.index')
            ->with('success', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞.');
    }

    /**
     * üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    public function destroy($id)
    {
        $category = Category::findOrFail($id);
        $category->delete();

        return redirect()
            ->route('admin.categories.index')
            ->with('success', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞');
    }

    /**
     * üóÇÔ∏è –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
     *
     * –û–∂–∏–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å ID —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: category_ids=1,2,3
     */
    public function bulkDelete(Request $request)
    {
        $ids = explode(',', $request->input('category_ids'));

        if (!empty($ids)) {
            Category::whereIn('id', $ids)->delete();
            return response()->json(['success' => true]);
        }

        return response()->json(['error' => '–ù–µ –≤—ã–±—Ä–∞–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.'], 422);
    }
}
