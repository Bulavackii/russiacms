<?php

namespace Modules\Menu\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Modules\Menu\Models\Menu;
use Modules\Menu\Models\MenuItem;

/**
 * üìÇ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é –≤ –∞–¥–º–∏–Ω–∫–µ
 *
 * üîß –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
 * - —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω—é
 * - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
 * - —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å—é (drag-and-drop)
 * - –≤–∫–ª—é—á–µ–Ω–∏–µ/–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –º–µ–Ω—é
 */
class MenuController extends Controller
{
    /**
     * üìã –ú–µ—Ç–æ–¥ index()
     *
     * üîΩ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–µ–Ω—é
     */
    public function index()
    {
        $menus = Menu::all(); // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–µ–Ω—é
        return view('Menu::admin.menu.index', compact('menus'));
    }

    /**
     * ‚ûï –ú–µ—Ç–æ–¥ create()
     *
     * üîß –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–µ–Ω—é
     */
    public function create()
    {
        return view('Menu::admin.menu.create');
    }

    /**
     * üíæ –ú–µ—Ç–æ–¥ store()
     *
     * üì• –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –º–µ–Ω—é –≤ –ë–î
     */
    public function store(Request $request)
    {
        // üìë –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
        $request->validate([
            'title' => 'required|string|max:255',
            'position' => 'required|in:header,footer,sidebar', // –ü–æ–∑–∏—Ü–∏–∏, –≥–¥–µ –º–æ–∂–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –º–µ–Ω—é
            'active' => 'nullable|boolean',
        ]);

        // ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é
        Menu::create([
            'title' => $request->title,
            'position' => $request->position,
            'active' => $request->has('active'),
        ]);

        return redirect()->route('admin.menus.index')->with('success', 'üìÅ –ú–µ–Ω—é —Å–æ–∑–¥–∞–Ω–æ.');
    }

    /**
     * ‚úèÔ∏è –ú–µ—Ç–æ–¥ edit()
     *
     * üìÉ –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω—é –∏ –µ–≥–æ –ø—É–Ω–∫—Ç–æ–≤
     */
    public function edit(Menu $menu)
    {
        // üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ—Ä–Ω–µ–≤—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é —Å –ø–æ—Ç–æ–º–∫–∞–º–∏
        $items = $menu->items()->with('children')->whereNull('parent_id')->get();

        return view('Menu::admin.menu.edit', compact('menu', 'items'));
    }

    /**
     * üîÑ –ú–µ—Ç–æ–¥ toggle()
     *
     * ‚öôÔ∏è –í–∫–ª—é—á–∞–µ—Ç/–æ—Ç–∫–ª—é—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é
     */
    public function toggle(Menu $menu)
    {
        $menu->active = !$menu->active; // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        $menu->save();

        return back()->with('success', '–ú–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.');
    }

    /**
     * üß© –ú–µ—Ç–æ–¥ updateOrder()
     *
     * üí° –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é (drag-and-drop)
     */
    public function updateOrder(Request $request, Menu $menu)
    {
        $orderData = $request->input('items'); // JSON —Å –ø–æ—Ä—è–¥–∫–æ–º –∏ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å—é
        $this->saveMenuItemsOrder($orderData, null, $menu->id); // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        return response()->json(['success' => true]);
    }

    /**
     * ‚ôªÔ∏è –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ saveMenuItemsOrder()
     *
     * üîÅ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ –∏ –∏–µ—Ä–∞—Ä—Ö–∏—é –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
     */
    private function saveMenuItemsOrder(array $items, $parentId = null, $menuId = null)
    {
        foreach ($items as $index => $itemData) {
            $item = MenuItem::find($itemData['id']);

            if ($item) {
                $item->update([
                    'order' => $index,
                    'parent_id' => $parentId,
                    'menu_id' => $menuId ?? $item->menu_id,
                ]);

                // üîΩ –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–µ–π
                if (isset($itemData['children']) && is_array($itemData['children'])) {
                    $this->saveMenuItemsOrder($itemData['children'], $item->id, $menuId ?? $item->menu_id);
                }
            }
        }
    }

    /**
     * ‚ûï –ú–µ—Ç–æ–¥ storeItem()
     *
     * üìå –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é –∫ —Ç–µ–∫—É—â–µ–º—É –º–µ–Ω—é
     */
    public function storeItem(Request $request, Menu $menu)
    {
        // üìë –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
        $validated = $request->validate([
            'title' => 'required|string|max:255', // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞
            'type' => 'required|in:url,page,category', // –¢–∏–ø —Å—Å—ã–ª–∫–∏
            'url' => 'nullable|string', // –í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞
            'linked_id' => 'nullable|integer', // –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π ID (–Ω–∞–ø—Ä–∏–º–µ—Ä, ID —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
            'parent_id' => 'nullable|exists:menu_items,id', // –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç
            'meta_title' => 'nullable|string|max:255',
            'meta_description' => 'nullable|string|max:255',
            'meta_keywords' => 'nullable|string|max:255',
        ]);

        // üíæ –°–æ–∑–¥–∞—ë–º –ø—É–Ω–∫—Ç
        $menu->items()->create($validated);

        return back()->with('success', '–ü—É–Ω–∫—Ç –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω.');
    }

    /**
     * üóëÔ∏è –ú–µ—Ç–æ–¥ destroy()
     *
     * ‚ùå –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ–Ω—é –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
     */
    public function destroy(Menu $menu)
    {
        // üßπ –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
        $menu->items()->delete();

        // üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å–∞–º–æ –º–µ–Ω—é
        $menu->delete();

        return redirect()->route('admin.menus.index')->with('success', '–ú–µ–Ω—é —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.');
    }
}
