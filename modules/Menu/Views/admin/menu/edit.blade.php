@extends('layouts.admin')

@section('title', '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω—é')

@section('content')
    {{-- üß© –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã --}}
    <div class="mb-6 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2">
        {{-- –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ–Ω—é --}}
        <h1 class="text-2xl font-bold text-gray-800 dark:text-white">
            üß© –ú–µ–Ω—é: {{ $menu->title }}
        </h1>

        {{-- –ü–æ–∑–∏—Ü–∏—è –º–µ–Ω—é --}}
        <div class="text-sm text-gray-500 dark:text-gray-400">
            üìç –ü–æ–∑–∏—Ü–∏—è: <strong>{{ $menu->position }}</strong>
        </div>
    </div>

    {{-- ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é --}}
    <form action="{{ route('admin.menu_items.store', $menu) }}" method="POST"
        class="bg-white dark:bg-gray-900 border border-gray-300 dark:border-gray-700 rounded-xl p-6 mb-10 space-y-6">
        @csrf

        {{-- üî£ –ü–æ–ª—è —Ñ–æ—Ä–º—ã --}}
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6">
            <div>
                <label class="block text-sm font-semibold mb-1 text-gray-700 dark:text-gray-300">üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ</label>
                <input type="text" name="title" required
                    class="w-full border rounded px-3 py-2 dark:bg-gray-800 dark:text-white">
            </div>

            <div>
                <label class="block text-sm font-semibold mb-1 text-gray-700 dark:text-gray-300">üîó –¢–∏–ø</label>
                <select name="type" id="menu-type"
                    class="w-full border rounded px-3 py-2 dark:bg-gray-800 dark:text-white">
                    <option value="url">üåç –í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞</option>
                    <option value="page">üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞</option>
                    <option value="category">üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è</option>
                </select>
            </div>

            <div id="url-field">
                <label class="block text-sm font-semibold mb-1 text-gray-700 dark:text-gray-300">üåê URL (–µ—Å–ª–∏
                    –≤–Ω–µ—à–Ω—è—è)</label>
                <input type="text" name="url"
                    class="w-full border rounded px-3 py-2 dark:bg-gray-800 dark:text-white">
            </div>

            <div id="linked-id-field" style="display:none">
                <label class="block text-sm font-semibold mb-1 text-gray-700 dark:text-gray-300">üîç –°–≤—è–∑–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç</label>
                <select name="linked_id" id="linked-id"
                    class="w-full border rounded px-3 py-2 dark:bg-gray-800 dark:text-white"></select>
            </div>
        </div>

        {{-- üß† SEO-–ø–æ–ª—è --}}
        <div class="grid grid-cols-1 gap-4">
            <div>
                <label class="block text-sm font-semibold mb-1 text-gray-700 dark:text-gray-300">üß† Meta Title</label>
                <input type="text" name="meta_title"
                    class="w-full border rounded px-3 py-2 dark:bg-gray-800 dark:text-white">
            </div>
            <div>
                <label class="block text-sm font-semibold mb-1 text-gray-700 dark:text-gray-300">üìù Meta Description</label>
                <input type="text" name="meta_description"
                    class="w-full border rounded px-3 py-2 dark:bg-gray-800 dark:text-white">
            </div>
            <div>
                <label class="block text-sm font-semibold mb-1 text-gray-700 dark:text-gray-300">üè∑Ô∏è Meta Keywords</label>
                <input type="text" name="meta_keywords"
                    class="w-full border rounded px-3 py-2 dark:bg-gray-800 dark:text-white">
            </div>
        </div>

        {{-- ‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ --}}
        <div class="pt-4">
            <button type="submit"
                class="bg-black hover:bg-gray-800 text-white px-6 py-2 rounded shadow text-sm inline-flex items-center gap-2">
                ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—É–Ω–∫—Ç
            </button>
        </div>
    </form>

    {{-- üîΩ –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å --}}
    <hr class="my-8 border-t border-dashed border-gray-300 dark:border-gray-700">

    {{-- üß© Drag-and-drop —Ä–µ–¥–∞–∫—Ç–æ—Ä --}}
    <div class="bg-white dark:bg-gray-900 border border-gray-300 dark:border-gray-700 rounded-xl p-6 relative">
        <ul id="menu-list" class="space-y-2">
            {{-- üß© –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ JS --}}
        </ul>

        {{-- üíæ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (sticky) --}}
        <div class="mt-6 sm:mt-8 text-right">
            <button id="save-menu-order"
                class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded shadow text-sm inline-flex items-center gap-2">
                <i class="fas fa-save"></i> –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫
            </button>
        </div>
    </div>

    {{-- üìã –°–ø–∏—Å–æ–∫ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤—ã–≤–æ–¥) --}}
    @if ($items->isNotEmpty())
        <div class="mt-10 space-y-3">
            <h2 class="text-lg font-bold text-gray-700 dark:text-white mb-2">üìå –°–ø–∏—Å–æ–∫ –ø—É–Ω–∫—Ç–æ–≤</h2>

            @foreach ($items as $item)
                <div
                    class="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700 shadow-sm flex flex-col sm:flex-row justify-between gap-4 items-start sm:items-center">
                    <div>
                        <div class="font-semibold text-gray-900 dark:text-white">{{ $item->title }}</div>
                        <div class="text-xs text-gray-500 mt-1">
                            üîó –¢–∏–ø: <span title="–¢–∏–ø –ø—Ä–∏–≤—è–∑–∫–∏">{{ $item->type }}</span>
                            | üÜî ID: <span title="ID –æ–±—ä–µ–∫—Ç–∞">{{ $item->linked_id }}</span>
                        </div>
                    </div>
                    <form method="POST" action="{{ route('admin.menu_items.destroy', [$menu, $item]) }}"
                        onsubmit="return confirm('–£–¥–∞–ª–∏—Ç—å –ø—É–Ω–∫—Ç?')">
                        @csrf
                        @method('DELETE')
                        <button type="submit"
                            class="text-red-600 hover:text-red-800 text-sm inline-flex items-center gap-1">
                            üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                        </button>
                    </form>
                </div>
            @endforeach
        </div>
    @endif
@endsection

@push('scripts')
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <script>
        const menuData = @json($items);

        function renderList(items, parent = null, depth = 0) {
            const ul = document.createElement('ul');
            ul.classList.add('space-y-2', 'pl-' + Math.min(depth * 4, 12));

            items.forEach(item => {
                const li = document.createElement('li');
                li.classList.add(
                    'p-2', 'border', 'rounded', 'bg-gray-50', 'dark:bg-gray-800', 'relative'
                );
                li.dataset.id = item.id;

                const hasChildren = item.children && item.children.length > 0;

                li.innerHTML = `
            <div class="flex justify-between items-center handle cursor-move px-2 py-1 rounded ${hasChildren ? 'bg-blue-50 dark:bg-blue-900' : ''}">
                <span class="font-medium flex items-center gap-1">
                    <i class="fas fa-ellipsis-v text-gray-400"></i>
                    ${item.title}
                </span>
                <span class="text-xs text-gray-500">${item.type}</span>
            </div>
        `;

                // –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –¥–µ—Ç–µ–π, –≤—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π ul –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
                const childUl = document.createElement('ul');
                childUl.classList.add('pl-4', 'space-y-2');
                li.appendChild(childUl);

                if (hasChildren) {
                    const nested = renderList(item.children, item.id, depth + 1);
                    childUl.replaceWith(nested); // –∑–∞–º–µ–Ω–∏–º –ø—É—Å—Ç–æ–π ul –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π
                }

                ul.appendChild(li);
            });

            return ul;
        }

        const menuList = renderList(menuData);
        document.getElementById('menu-list').replaceWith(menuList);

        // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø–æ–¥–∫–ª—é—á–∞–µ–º Sortable –∫–æ –≤—Å–µ–º —Å–ø–∏—Å–∫–∞–º
        function initSortable(ul) {
            new Sortable(ul, {
                group: 'nested',
                animation: 150,
                handle: '.handle',
                fallbackOnBody: true,
                swapThreshold: 0.65,
                ghostClass: 'bg-yellow-100',
            });

            ul.querySelectorAll(':scope > li > ul').forEach(nestedUl => {
                initSortable(nestedUl); // –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏
            });
        }

        initSortable(menuList);

        // üîÅ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
        function buildOrder(ul) {
            return [...ul.children].map((li, index) => {
                const item = {
                    id: li.dataset.id,
                    order: index,
                };
                const nested = li.querySelector(':scope > ul');
                if (nested && nested.children.length > 0) {
                    item.children = buildOrder(nested);
                }
                return item;
            });
        }

        // üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        document.getElementById('save-menu-order').addEventListener('click', () => {
            const result = buildOrder(menuList);
            fetch("{{ route('admin.menus.updateOrder', $menu) }}", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': '{{ csrf_token() }}'
                },
                body: JSON.stringify({
                    items: result
                })
            }).then(() => location.reload());
        });

        // üîÑ AJAX-–ø–æ–¥–≥—Ä—É–∑–∫–∞ —Å—É—â–Ω–æ—Å—Ç–µ–π
        document.getElementById('menu-type').addEventListener('change', function() {
            const selectedType = this.value;
            const linkedIdField = document.getElementById('linked-id-field');
            const linkedIdSelect = document.getElementById('linked-id');
            const urlField = document.getElementById('url-field');

            if (selectedType === 'url') {
                linkedIdField.style.display = 'none';
                urlField.style.display = 'block';
                return;
            }

            linkedIdField.style.display = 'block';
            urlField.style.display = 'none';
            linkedIdSelect.innerHTML = '<option value="">–ó–∞–≥—Ä—É–∑–∫–∞...</option>';

            const url = selectedType === 'page' ?
                '{{ route('admin.ajax.pages') }}' :
                '{{ route('admin.ajax.categories') }}';

            fetch(url)
                .then(res => res.json())
                .then(data => {
                    linkedIdSelect.innerHTML = data.map(item =>
                        `<option value="${item.id}">${item.title}</option>`).join('');
                });
        });
    </script>
@endpush
