@extends('layouts.admin')

@section('title', '–ò–º–ø–æ—Ä—Ç/–≠–∫—Å–ø–æ—Ä—Ç –Ω–æ–≤–æ—Å—Ç–µ–π')

@section('content')
    <h1 class="text-2xl font-bold mb-6">üß© –ò–º–ø–æ—Ä—Ç / –≠–∫—Å–ø–æ—Ä—Ç –Ω–æ–≤–æ—Å—Ç–µ–π</h1>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {{-- EXPORT --}}
        <div class="bg-white dark:bg-gray-900 border rounded-xl p-6 shadow space-y-4">
            <h2 class="text-lg font-semibold">üì§ –≠–∫—Å–ø–æ—Ä—Ç</h2>
            <form method="POST" action="{{ route('admin.newsio.export') }}" class="space-y-4">
                @csrf
                <div>
                    <label class="block text-sm font-medium mb-1">–§–æ—Ä–º–∞—Ç</label>
                    <select name="format" class="border rounded px-3 py-2 w-full">
                        <option value="json">JSON (–º–∞—Å—Å–∏–≤)</option>
                        <option value="ndjson">NDJSON (–ø–æ —Å—Ç—Ä–æ–∫–µ)</option>
                        <option value="csv">CSV</option>
                        <option value="zip">ZIP (manifest.json + media/*)</option>
                    </select>
                </div>

                <div>
                    <label class="block text-sm font-medium mb-1">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (—Ñ–∏–ª—å—Ç—Ä)</label>
                    <select name="category_ids[]" multiple class="border rounded px-3 py-2 w-full h-32">
                        @foreach ($categories as $c)
                            <option value="{{ $c->id }}">{{ $c->title }} (ID: {{ $c->id }})</option>
                        @endforeach
                    </select>
                    <p class="text-xs text-gray-500 mt-1">–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º ‚Äî –≤—Å–µ.</p>
                </div>

                <div class="grid grid-cols-2 gap-3">
                    <div>
                        <label class="block text-sm mb-1">–° –¥–∞—Ç—ã</label>
                        <input type="date" name="date_from" class="border rounded px-3 py-2 w-full">
                    </div>
                    <div>
                        <label class="block text-sm mb-1">–ü–æ –¥–∞—Ç—É</label>
                        <input type="date" name="date_to" class="border rounded px-3 py-2 w-full">
                    </div>
                </div>

                <div class="grid grid-cols-2 gap-3">
                    <div>
                        <label class="block text-sm mb-1">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ</label>
                        <select name="published" class="border rounded px-3 py-2 w-full">
                            <option value="all">–í—Å–µ</option>
                            <option value="1">–¢–æ–ª—å–∫–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ</option>
                            <option value="0">–¢–æ–ª—å–∫–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∏</option>
                        </select>
                    </div>
                    <label class="flex items-center gap-2 mt-6">
                        <input type="checkbox" name="with_media" value="1" class="rounded border-gray-400">
                        <span class="text-sm">–í–ª–æ–∂–∏—Ç—å –æ–±–ª–æ–∂–∫–∏ (ZIP)</span>
                    </label>
                </div>

                <button class="bg-black text-white px-4 py-2 rounded">–°–∫–∞—á–∞—Ç—å</button>
            </form>
        </div>

        {{-- IMPORT --}}
        <div class="bg-white dark:bg-gray-900 border rounded-xl p-6 shadow space-y-4">
            <h2 class="text-lg font-semibold">üì• –ò–º–ø–æ—Ä—Ç</h2>

            <form method="POST"
                  action="{{ route('admin.newsio.import') }}"
                  enctype="multipart/form-data"
                  class="space-y-4"
                  x-data="{
                    summary: null,
                    loading: false,
                    error: null,
                    async runDryRun(e) {
                        this.error = null; this.summary = null; this.loading = true;
                        const form = e.target.closest('form');
                        const data = new FormData(form);
                        try {
                            const res = await fetch('{{ route('admin.newsio.dryrun') }}', {
                                method: 'POST',
                                body: data,
                                headers: {'X-CSRF-TOKEN': '{{ csrf_token() }}'}
                            });
                            if (!res.ok) throw new Error('HTTP '+res.status);
                            const json = await res.json();
                            this.summary = json.preview || json; // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
                        } catch (err) {
                            this.error = '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ' + (err?.message || err);
                        } finally {
                            this.loading = false;
                        }
                    }
                  }">
                @csrf

                <input type="file" name="file" accept=".json,.txt,.csv,.zip"
                       class="border rounded px-3 py-2 w-full" required>

                <div class="grid grid-cols-1 sm:grid-cols-3 gap-3">
                    <div>
                        <label class="block text-sm mb-1">–û–±–Ω–æ–≤–ª—è—Ç—å –ø–æ</label>
                        <select name="update_by" class="border rounded px-3 py-2 w-full">
                            <option value="slug">slug</option>
                            <option value="id">id</option>
                            <option value="none">–Ω–µ –æ–±–Ω–æ–≤–ª—è—Ç—å (–≤—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å)</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm mb-1">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ</label>
                        <select name="match_category_by" class="border rounded px-3 py-2 w-full">
                            <option value="id">id</option>
                            <option value="slug">slug</option>
                            <option value="title">title</option>
                        </select>
                    </div>
                    <label class="flex items-center gap-2 mt-6">
                        <input type="checkbox" name="create_missing_cats" value="1" class="rounded border-gray-400">
                        <span class="text-sm">–°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</span>
                    </label>
                </div>

                <div class="flex gap-3 items-center">
                    <button type="button"
                            class="px-3 py-2 rounded border"
                            @click="runDryRun($event)"
                            :disabled="loading">
                        <span x-show="!loading">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å (dry-run)</span>
                        <span x-show="loading">–ü—Ä–æ–≤–µ—Ä–∫–∞‚Ä¶</span>
                    </button>

                    <button class="bg-blue-600 text-white px-4 py-2 rounded"
                            :disabled="loading">
                        –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                </div>

                {{-- –†–µ–∑—É–ª—å—Ç–∞—Ç dry-run --}}
                <template x-if="error">
                    <div class="p-3 rounded bg-red-100 text-red-800 text-sm" x-text="error"></div>
                </template>

                <template x-if="summary">
                    <div class="p-3 rounded bg-yellow-50 border text-sm leading-6">
                        <div class="font-semibold mb-1">‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ì–æ—Ç–æ–≤–æ –∫ –∏–º–ø–æ—Ä—Ç—É.</div>
                        <div class="grid grid-cols-2 gap-x-6 gap-y-1">
                            <div>–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: <span class="font-medium" x-text="summary.total"></span></div>
                            <div>–° slug: <span class="font-medium" x-text="summary.with_slug"></span></div>
                            <div>–° id: <span class="font-medium" x-text="summary.with_id"></span></div>
                            <div>–°—Å—ã–ª–æ–∫ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: <span class="font-medium" x-text="summary.cats_refs"></span></div>
                            <div>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ id: <span class="font-medium" x-text="summary.cats_by_id"></span></div>
                            <div>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ slug: <span class="font-medium" x-text="summary.cats_by_slug"></span></div>
                            <div>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ title: <span class="font-medium" x-text="summary.cats_by_title"></span></div>
                            <div>–û–±–Ω–æ–≤–ª—è—Ç—å –ø–æ: <span class="font-medium" x-text="summary.update_by"></span></div>
                            <div>–°–æ–ø–æ—Å—Ç–∞–≤–ª—è—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ: <span class="font-medium" x-text="summary.match_by"></span></div>
                        </div>
                    </div>
                </template>

                <p class="text-xs text-gray-500">
                    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JSON / NDJSON / CSV / ZIP (manifest.json + media/*).<br>
                    –í JSON –æ–±—ä–µ–∫—Ç –Ω–æ–≤–æ—Å—Ç–∏ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å: id, slug, title, content, template, published, cover, price, stock, is_promo, categories: [{id|slug|title}].<br>
                    –í CSV –ø–æ–ª–µ <code>categories</code> ‚Äî —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (slug), –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>news,updates</code>.
                </p>
            </form>
        </div>
    </div>
@endsection
