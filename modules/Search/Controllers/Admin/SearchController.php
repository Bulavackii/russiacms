<?php

namespace Modules\Search\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Modules\System\Models\Module;
use App\Models\User;
use App\Models\Category;
use App\Models\Product;
use Illuminate\Support\Str;
use Modules\Messages\Models\Message;
use Modules\News\Models\News;

class SearchController extends Controller
{
    public function index(Request $request)
    {
        // üîé –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
        $query  = $request->input('q');
        $filter = $request->input('filter');
        $sort   = $request->input('sort', 'relevance');

        // üéõÔ∏è –§–ª–∞–≥–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –±–ª–æ–∫–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–∏–ª—å—Ç—Ä–∞
        $showModules    = !$filter || $filter === 'modules';
        $showUsers      = !$filter || $filter === 'users';
        $showCategories = !$filter || $filter === 'categories';
        $showProducts   = !$filter || $filter === 'products';
        $showCustom     = !$filter || $filter === 'custom';
        $showNews       = !$filter || $filter === 'news';
        $showFaq        = !$filter || $filter === 'faq';
        $showReviews    = !$filter || $filter === 'reviews';
        $showContacts   = !$filter || $filter === 'contacts';

        // üß© –ü–æ–∏—Å–∫ –ø–æ –º–æ–¥—É–ª—è–º
        $modules = $showModules ? Module::query()
            ->where('name', 'like', "%$query%")
            ->orWhere('version', 'like', "%$query%")
            ->when($sort === 'name_asc', fn($q) => $q->orderBy('name'))
            ->when($sort === 'name_desc', fn($q) => $q->orderByDesc('name'))
            ->when($sort === 'date_asc', fn($q) => $q->orderBy('created_at'))
            ->when($sort === 'date_desc', fn($q) => $q->orderByDesc('created_at'))
            ->get() : collect();

        // üë§ –ü–æ–∏—Å–∫ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        $users = $showUsers ? User::query()
            ->where('name', 'like', "%$query%")
            ->orWhere('email', 'like', "%$query%")
            ->when($sort === 'name_asc', fn($q) => $q->orderBy('name'))
            ->when($sort === 'name_desc', fn($q) => $q->orderByDesc('name'))
            ->when($sort === 'date_asc', fn($q) => $q->orderBy('created_at'))
            ->when($sort === 'date_desc', fn($q) => $q->orderByDesc('created_at'))
            ->get() : collect();

        // üè∑Ô∏è –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        $categories = $showCategories ? Category::query()
            ->where('title', 'like', "%$query%")
            ->when($sort === 'name_asc', fn($q) => $q->orderBy('title'))
            ->when($sort === 'name_desc', fn($q) => $q->orderByDesc('title'))
            ->get() : collect();

        // üõí –ü–æ–∏—Å–∫ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
        $products = $showProducts ? Product::query()
            ->where('name', 'like', "%$query%")
            ->orWhere('description', 'like', "%$query%")
            ->when($sort === 'name_asc', fn($q) => $q->orderBy('name'))
            ->when($sort === 'name_desc', fn($q) => $q->orderByDesc('name'))
            ->when($sort === 'date_asc', fn($q) => $q->orderBy('created_at'))
            ->when($sort === 'date_desc', fn($q) => $q->orderByDesc('created_at'))
            ->get() : collect();

        // üßæ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —à–∞–±–ª–æ–Ω news (template = products)
        $productsFromNews = $showProducts ? News::query()
            ->where('template', 'products')
            ->where(fn($q) => $q->where('title', 'like', "%$query%")
                                ->orWhere('content', 'like', "%$query%")
                                ->orWhere('meta_description', 'like', "%$query%"))
            ->when($sort === 'name_asc', fn($q) => $q->orderBy('title'))
            ->when($sort === 'name_desc', fn($q) => $q->orderByDesc('title'))
            ->when($sort === 'date_asc', fn($q) => $q->orderBy('created_at'))
            ->when($sort === 'date_desc', fn($q) => $q->orderByDesc('created_at'))
            ->get() : collect();

        // üì∞ –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–≤–æ—Å—Ç—è–º
        $news = $showNews ? News::query()
            ->where('template', 'news')
            ->where(fn($q) => $q->where('title', 'like', "%$query%")
                                ->orWhere('content', 'like', "%$query%")
                                ->orWhere('meta_description', 'like', "%$query%")
                                ->orWhere('meta_title', 'like', "%$query%")
                                ->orWhere('meta_keywords', 'like', "%$query%")
                                ->orWhere('meta_header', 'like', "%$query%"))
            ->get() : collect();

        // ‚ùì –ü–æ–∏—Å–∫ –ø–æ —à–∞–±–ª–æ–Ω—É –≤–æ–ø—Ä–æ—Å–æ–≤ (FAQ)
        $faq = $showFaq ? News::query()
            ->where('template', 'faq')
            ->where(fn($q) => $q->where('title', 'like', "%$query%")
                                ->orWhere('content', 'like', "%$query%"))
            ->get() : collect();

        // üí¨ –ü–æ–∏—Å–∫ –ø–æ –æ—Ç–∑—ã–≤–∞–º
        $reviews = $showReviews ? News::query()
            ->where('template', 'reviews')
            ->where(fn($q) => $q->where('title', 'like', "%$query%")
                                ->orWhere('content', 'like', "%$query%"))
            ->get() : collect();

        // üì© –ü–æ–∏—Å–∫ –ø–æ –æ–±—Ä–∞—â–µ–Ω–∏—è–º (–∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Ñ–æ—Ä–º—ã)
        $contacts = $showContacts ? Message::query()
            ->where('subject', 'like', "%$query%")
            ->orWhere('body', 'like', "%$query%")
            ->get() : collect();

        // üß¨ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –º–æ–¥—É–ª–∏
        $customResults = [];
        if ($showCustom) {
            foreach (Module::where('active', true)->get() as $mod) {
                $provider = "Modules\\{$mod->name}\\SearchProvider";

                if (class_exists($provider) && method_exists($provider, 'search')) {
                    $results = call_user_func([$provider, 'search'], $query);
                    if (!empty($results)) {
                        $customResults[$mod->name] = $results;
                    }
                }
            }
        }

        // üìÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏
        return view('Search::admin.index', compact(
            'query', 'filter', 'sort',
            'modules', 'users', 'categories', 'products', 'productsFromNews',
            'news', 'faq', 'reviews', 'contacts', 'customResults',
            'showModules', 'showUsers', 'showCategories', 'showProducts',
            'showNews', 'showFaq', 'showReviews', 'showContacts', 'showCustom'
        ));
    }
}
